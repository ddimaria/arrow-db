[package]
name = "arrow-db-wasm"
version = "0.1.0"
authors = ["David DiMaria <info@collectivesessions.com>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
arrow-db-core = { path = "../arrow-db-core", features = ["wasm"] }
bytes = "1.8.0"
chrono = { version = "0.4", features = ["wasmbind"] }
serde-wasm-bindgen = "0.6.5"
wasm-bindgen = "0.2.104"
wasm-bindgen-futures = "0.4.43"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
arrow = { version = "53.2.0", default-features = false }
serde = { version = "1.0.214", default-features = false, features = ["derive"] }


[dev-dependencies]
wasm-bindgen-test = "0.3.43"

[package.metadata.wasm-pack.profile.dev.wasm-bindgen]
debug-js-glue = true
demangle-name-section = true
dwarf-debug-info = false

[profile.release]
# Optimize for speed of compilation rather than runtime performance in CI
# This significantly reduces build times
opt-level = 2          # Use O2 instead of O3 (faster compilation)
lto = "thin"           # Use thin LTO instead of full LTO (much faster)
codegen-units = 16     # More codegen units = faster parallel compilation

[profile.release.package."*"]
# For dependencies, optimize for speed (they don't change often and are cached)
opt-level = 3
codegen-units = 1
